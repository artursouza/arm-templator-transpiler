{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ArmLang",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#properties"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.armlang",
				"match": "\\b(resource|module|variable|export|input|output|for|in|if|else)\\b"
			}, {
				"name": "keyword.bundle.armlang",
				"match": "\\b(azrm|mod|oam)\\b"
			}, {
				"name": "keyword.type.armlang",
				"match": "\\b(string|securestring|int|bool|object|array)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.single.armlang",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.armlang",
					"match": "(?x)\\\\(?:[\"\\\\/bfnrt$]|[0-9a-fA-F]{4})"
				},
				{
					"include": "#stringinterp"
				},
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.unrecognized-string-escape.armlang"
                }
			]
		},
		"stringinterp": {
			"begin": "\\$\\{",
			"end": "\\}",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.template-expression.begin.armlang"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.template-expression.end.armlang"
				}
			},
			"name": "meta.embedded.block",
			"patterns": [
				{
					"include": "#functions"
				},
				{
					"include": "#identifiers"
				},
				{
					"name": "invalid.illegal.expected-expression.armlang",
					"match": "[^\\s]"
				}
			]
		},
		"identifiers": {
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\w*\\b",
			"captures": {
				"1": {
					"name": "variable.other.identifier.armlang"
				}
			}
		},
		"properties": {
			"match": "\\b([a-zA-Z][a-zA-Z0-9]*)\\w*\\b:",
			"captures": {
				"1": {
					"name": "support.type.property-name.armlang"
				}
			}
		},
		"functions": {
			"begin": "\\b([a-zA-Z][a-zA-Z0-9]*)\\w*\\(\\b",
			"end": "\\)",
			"beginCaptures": {
				"1": {
					"name": "support.function.armlang"
				}
			},
			"patterns": [
				{
					"include": "#functions"
				},
				{
					"include": "#identifiers"
				},
				{
					"include": "#strings"
				},
                {
                    "match": ",",
                    "name": "punctuation.separator.function.armlang"
                },
				{
					"name": "invalid.illegal.expected-expression.armlang",
					"match": "[^\\s]"
				}
			]
		},
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*\\*(?!/)",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.armlang"
                        }
                    },
                    "end": "\\*/",
                    "name": "comment.block.documentation.armlang"
                },
                {
                    "begin": "/\\*",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.armlang"
                        }
                    },
                    "end": "\\*/",
                    "name": "comment.block.armlang"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.armlang"
                        }
                    },
                    "match": "(//).*$\\n?",
                    "name": "comment.line.double-slash.js"
                }
            ]
        }
	},
	"scopeName": "source.armlang"
}